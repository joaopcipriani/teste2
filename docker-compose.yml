version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: sentry-postgres
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DB: sentry
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: sentry-redis
    restart: unless-stopped

  smtp:
    image: mailhog/mailhog
    container_name: sentry-smtp
    ports:
      - "8025:8025"  # painel de e-mails: http://192.168.31.150:8025
    restart: unless-stopped

  sentry:
    image: getsentry/sentry:24.10.0
    container_name: sentry-web
    depends_on:
      - postgres
      - redis
      - smtp
    environment:
      SENTRY_SECRET_KEY: "minha_chave_super_secreta_123"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
      SENTRY_EMAIL_HOST: smtp
      SENTRY_EMAIL_PORT: 1025
      SENTRY_SERVER_EMAIL: "sentry@example.com"
      SENTRY_ADMIN_EMAIL: "admin@example.com"
      SENTRY_USE_SSL: "false"
      SENTRY_SINGLE_ORGANIZATION: "true"
    ports:
      - "9000:9000"
    restart: unless-stopped
    command: ["run", "web"]
    volumes:
      - sentry-data:/data

  worker:
    image: getsentry/sentry:24.10.0
    container_name: sentry-worker
    depends_on:
      - sentry
      - postgres
      - redis
    environment:
      SENTRY_SECRET_KEY: "minha_chave_super_secreta_123"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
    restart: unless-stopped
    command: ["run", "worker"]

  cron:
    image: getsentry/sentry:24.10.0
    container_name: sentry-cron
    depends_on:
      - sentry
      - postgres
      - redis
    environment:
      SENTRY_SECRET_KEY: "minha_chave_super_secreta_123"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
    restart: unless-stopped
    command: ["run", "cron"]

volumes:
  sentry-postgres:
  sentry-data:
