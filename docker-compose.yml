version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: sentry-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DB: sentry
    volumes:
      - sentry-postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: sentry-redis
    restart: unless-stopped

  sentry-web:
    image: sentry-selfhosted:test
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentry-web
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      SENTRY_SECRET_KEY: "0b0dcdf2d3d3a944d9f2385f6fbd48c341c9944f217efc0ef8392b7ff3b9b0b6"
      SENTRY_SINGLE_ORGANIZATION: "True"
      SENTRY_USE_SSL: "False"
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_SERVER_EMAIL: "sentry@example.com"
    ports:
      - "35000:9000"
    volumes:
      - sentry-data:/data
    command: ["/docker-entrypoint.sh", "run", "web"]

  sentry-worker:
    image: sentry-selfhosted:test
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentry-worker
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    environment:
      SENTRY_SECRET_KEY: "0b0dcdf2d3d3a944d9f2385f6fbd48c341c9944f217efc0ef8392b7ff3b9b0b6"
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
    command: ["/docker-entrypoint.sh", "run", "worker"]

  sentry-cron:
    image: sentry-selfhosted:test
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentry-cron
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    environment:
      SENTRY_SECRET_KEY: "0b0dcdf2d3d3a944d9f2385f6fbd48c341c9944f217efc0ef8392b7ff3b9b0b6"
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_DB_NAME: sentry
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
    command: ["/docker-entrypoint.sh", "run", "cron"]

volumes:
  sentry-postgres-data:
  sentry-data:
